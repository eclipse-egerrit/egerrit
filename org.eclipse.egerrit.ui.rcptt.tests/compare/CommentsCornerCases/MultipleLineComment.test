--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: MultipleLineComment
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _dAOLcN2PEear4KIbYXINCQ
Runtime-Version: 2.1.0.201605312320
Save-Time: 1/18/17 10:17 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

let [val review [create-review -server $serverURL]] {
	openCompareEditor $review
}

with [get-editor "Compare.*"] {
	//Insert a two line comment and check it
	insertComment -on left -text "part1\npart2" -atLine 1 -column 30
	
	with [get-left-editor] {
	    select-range 2 1 2 6
		get-property "getSelectionText()" | equals "part1" | verify-true
		select-range 3 1 3 6
		get-property "getSelectionText()" | equals "part2" | verify-true
	}
	
	//Save comment and make sure only one comment is saved
	key-type "M1+s"
	with [get-left-editor] {
	    select-range 2 1 2 14
		get-property "getSelectionText()" | equals "Draft.*part1" | verify-true
		select-range 3 1 3 6
		get-property "getSelectionText()" | equals "part2.*" | verify-true
	}
	
	
	//Delete the first line of the two line comment 
	with [get-left-editor] {
		set-caret-pos -line 1 -column 0
		key-type "M1+d"
	
	    select-range 2 1 2 6
		get-property "getSelectionText()" | equals "part2.*" | verify-true
	}

	//Save the resulting comment (only one line now)
		//Delete the first line of the two line comment 
	key-type "M1+s"

	with [get-left-editor] {
	    select-range 2 1 2 14
		get-property "getSelectionText()" | equals "Draft.*part2.*" | verify-true
	}
		
}

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
