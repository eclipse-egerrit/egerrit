--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: ReplyToReviewDefaultValue
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _inl-EGDUEeamXfKo3m2CPA
Runtime-Version: 2.1.0.201605312320
Save-Time: 9/12/16 9:36 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

let [val review [create-review -server $serverURL]] {
   //the current user votes
   runQueryAndOpenEditor $review

   // do a reply and vote +1
   get-editor | get-button "Reply..." | click
   get-menu "Reply..." | click
   with [get-window "Reply to comment"] {
       get-button "Looks good to me, but someone else must approve" | click
       get-button OK | click
   }

   get-editor | close

   //Get another user to vote -1
   switch-user -to "test1"
   runQueryAndOpenEditor $review -serverName "test1"
   delete-gerrit-server "test1"
   
   get-editor | get-button "Reply..." | click
   get-menu "Reply..." | click
   with [get-window "Reply to comment"] {
   	   assert-that-radio-button "No score" -is enabled
       get-button "I would prefer this is not merged as is" | click
       get-button OK | click
   }
   
   get-editor | close

   //Get back to the first user to confirm the initial vote is still properly set
   switch-user -to $defaultUser
   runQueryAndOpenEditor $review -serverName $defaultUser
   delete-gerrit-server $defaultUser
   
   get-editor | get-button "Reply..." | click
   get-menu "Reply..." | click
   with [get-window "Reply to comment"] {
      // ensure that the default is the same as the first vote
      assert-that-radio-button "Looks good to me, but someone else must approve" -is enabled
   }
}

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
