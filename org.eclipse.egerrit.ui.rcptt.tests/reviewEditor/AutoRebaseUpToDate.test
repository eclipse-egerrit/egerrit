--- RCPTT testcase ---
Format-Version: 1.0
Element-Name: AutoRebaseUpToDate
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _rGac4AAnEeeZhLpbTxtQuA
Runtime-Version: 2.1.0.201606221726
Save-Time: 3/7/17 1:14 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

global [val text "Changes to stash"]

/* Remove all repos */
delete-git-repos
wait -ms $defaultWaitTime

/* Create a first review with a unique content (timestamp) */
let [val review1 [create-review -server $serverURL -filename "Project/src/file.txt" -fileContent [get-time | format-time
	-format "dd:mm:ss:SS"]]] {
	runQueryAndOpenEditor $review1
	import-project $review1 -projectName Project

	with [get-editor] {
		/* Verify that the automatic rebase can't start if no local repo is found on the workspace */
		get-button Rebase | click
		get-window "Code Review - Rebase Change" | get-button OK | click
		get-window "Automatic local rebase" | get-button OK | click
		wait -ms $defaultWaitTime

		get-window "Automatic local rebase was started (already up-to-date)" | get-property title | equals "Automatic" +
			" local rebase was started (already up-to-date)" | verify-true
	}
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
